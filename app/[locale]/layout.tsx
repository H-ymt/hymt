import './globals.css'
import 'modern-css-reset'

import clsx from 'clsx'
import type { Metadata } from 'next'
import { Montserrat } from 'next/font/google'
import localFont from 'next/font/local'
import { notFound } from 'next/navigation'
import { hasLocale, NextIntlClientProvider } from 'next-intl'
import { ThemeProvider } from 'next-themes'

import Header from '@/app/[locale]/components/header'
import { routing } from '@/i18n/routing'

const montserrat = Montserrat({
  subsets: ['latin'],
  variable: '--font-montserrat',
})

const geist = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 400 500 900',
})

export const metadata: Metadata = {
  title: {
    template: '%s',
    default: 'My homepage',
  },
  description: 'My homepage generated by Next.js with microCMS',
}

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode
  params: Promise<{ locale: string }>
}>) {
  const { locale } = await params
  if (!hasLocale(routing.locales, locale)) {
    notFound()
  }

  return (
    <html lang={locale} suppressHydrationWarning>
      <NextIntlClientProvider>
        <body className={clsx(geist.variable, montserrat.variable)} suppressHydrationWarning>
          <ThemeProvider attribute="class" defaultTheme="dark" enableSystem disableTransitionOnChange>
            <Header />
            <main>{children}</main>
          </ThemeProvider>
        </body>
      </NextIntlClientProvider>
    </html>
  )
}
